[{"path":"https://posit-dev.github.io/snowflakeauth/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 snowflakeauth authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://posit-dev.github.io/snowflakeauth/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Aaron Jacobs. Author. E. David Aja. Author, maintainer. Posit Software, PBC. Copyright holder, funder.","code":""},{"path":"https://posit-dev.github.io/snowflakeauth/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jacobs , Aja E (2025). snowflakeauth: Authentication Helpers 'Snowflake'. R package version 0.1.1, https://posit-dev.github.io/snowflakeauth/.","code":"@Manual{,   title = {snowflakeauth: Authentication Helpers for 'Snowflake'},   author = {Aaron Jacobs and E. David Aja},   year = {2025},   note = {R package version 0.1.1},   url = {https://posit-dev.github.io/snowflakeauth/}, }"},{"path":"https://posit-dev.github.io/snowflakeauth/index.html","id":"snowflakeauth","dir":"","previous_headings":"","what":"Authentication Helpers for Snowflake","title":"Authentication Helpers for Snowflake","text":"snowflakeauth toolkit authenticating Snowflake. aims compatibility connections.toml config.toml files used Snowflake Connector Python Snowflake CLI, R users can use consistent approach Snowflake credentials across languages. snowflakeauth intended use R package authors targeting Snowflake platform.","code":""},{"path":"https://posit-dev.github.io/snowflakeauth/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Authentication Helpers for Snowflake","text":"can install snowflakeauth CRAN : , install development version snowflakeauth GitHub :","code":"install.packages(\"snowflakeauth\") # install.packages(\"pak\") pak::pak(\"posit-dev/snowflakeauth\")"},{"path":"https://posit-dev.github.io/snowflakeauth/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Authentication Helpers for Snowflake","text":"snowflakeauth can pick default Snowflake connection parameters connections.toml config.toml files used Python Connector Snowflake Snowflake CLI (named connection, matter): can define parameters connection manually: parameters can used retrieve credentials, take form one HTTP headers:","code":"library(snowflakeauth)  snowflake_connection()  snowflake_connection(name = \"testing\") snowflake_connection(   account = \"myaccount\",   user = \"me\",   private_key_file = \"rsa_key.p8\",   private_key_file_pwd = \"supersecret\" )  snowflake_connection(   account = \"myaccount\",   user = \"me\",   authenticator = \"externalbrowser\" ) conn <- snowflake_connection(   account = \"myaccount\",   user = \"me\",   authenticator = \"oauth\",   token = \"token\" )  snowflake_credentials(conn)"},{"path":"https://posit-dev.github.io/snowflakeauth/index.html","id":"limitations","dir":"","previous_headings":"","what":"Limitations","title":"Authentication Helpers for Snowflake","text":"support SSO authentication using browser. support key-pair authentication password-protected private keys. support connection caching. support direct username/password authentication, username/password authentication MFA, “Native SSO” authentication, (Okta-). planned; please migrate OAuth key-pair authentication browser available.","code":""},{"path":"https://posit-dev.github.io/snowflakeauth/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Authentication Helpers for Snowflake","text":"MIT (c) Posit Software, PBC","code":""},{"path":"https://posit-dev.github.io/snowflakeauth/reference/has_a_default_connection.html","id":null,"dir":"Reference","previous_headings":"","what":"Reports whether a default connection is available — has_a_default_connection","title":"Reports whether a default connection is available — has_a_default_connection","text":"Reports whether default connection available","code":""},{"path":"https://posit-dev.github.io/snowflakeauth/reference/has_a_default_connection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reports whether a default connection is available — has_a_default_connection","text":"","code":"has_a_default_connection(...)"},{"path":"https://posit-dev.github.io/snowflakeauth/reference/has_a_default_connection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reports whether a default connection is available — has_a_default_connection","text":"... arguments passed snowflake_connection()","code":""},{"path":"https://posit-dev.github.io/snowflakeauth/reference/has_a_default_connection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reports whether a default connection is available — has_a_default_connection","text":"","code":"has_a_default_connection() #> [1] FALSE"},{"path":"https://posit-dev.github.io/snowflakeauth/reference/snowflake_connection.html","id":null,"dir":"Reference","previous_headings":"","what":"Snowflake connection parameter configuration — snowflake_connection","title":"Snowflake connection parameter configuration — snowflake_connection","text":"Reads Snowflake connection parameters connections.toml config.toml files used Snowflake Connector Python Snowflake CLI, specifies connection manually.","code":""},{"path":"https://posit-dev.github.io/snowflakeauth/reference/snowflake_connection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Snowflake connection parameter configuration — snowflake_connection","text":"","code":"snowflake_connection(name = NULL, ..., .config_dir = NULL)"},{"path":"https://posit-dev.github.io/snowflakeauth/reference/snowflake_connection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Snowflake connection parameter configuration — snowflake_connection","text":"name named connection. Defaults $SNOWFLAKE_DEFAULT_CONNECTION_NAME set, default_connection_name config.toml file (present), finally [default] section connections.toml file, . See Snowflake's documentation details. ... Additional connection parameters. See Common parameters. .config_dir directory search connections.toml config.toml file. Defaults $SNOWFLAKE_HOME ~/.snowflake directory exists, otherwise falls back platform-specific default. See Snowflake's documentation details.","code":""},{"path":"https://posit-dev.github.io/snowflakeauth/reference/snowflake_connection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Snowflake connection parameter configuration — snowflake_connection","text":"object class \"snowflake_connection\".","code":""},{"path":"https://posit-dev.github.io/snowflakeauth/reference/snowflake_connection.html","id":"common-parameters","dir":"Reference","previous_headings":"","what":"Common parameters","title":"Snowflake connection parameter configuration — snowflake_connection","text":"following list common connection parameters. complete list can found documentation Snowflake Connector Python: account: Snowflake account identifier. user: Snowflake username. role: role use connection. schema: default schema use connection. database: default database use connection. warehouse: default warehouse use connection. authenticator: authentication method use connection. private_key private_key_file: path PEM-encoded private key key-pair authentication. private_key_file_pwd: passphrase private key, . token: OAuth token use authentication. token_file_path: path OAuth token use authentication. password: user's Snowflake password.","code":""},{"path":"https://posit-dev.github.io/snowflakeauth/reference/snowflake_connection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Snowflake connection parameter configuration — snowflake_connection","text":"","code":"if (FALSE) { # has_a_default_connection() # Read the default connection parameters from an existing # connections.toml file: conn <- snowflake_connection()  # Read a named connection from an existing connections.toml file: conn <- snowflake_connection(name = \"default\")  # Override specific parameters for a connection: conn <- snowflake_connection(   schema = \"myschema\",   warehouse = \"mywarehouse\" ) } # Pass connection parameters manually, which is useful if there is no # connections.toml file. For example, to use key-pair authentication: conn <- snowflake_connection(   account = \"myaccount\",   user = \"me\",   private_key = \"rsa_key.p8\" )"},{"path":"https://posit-dev.github.io/snowflakeauth/reference/snowflake_credentials.html","id":null,"dir":"Reference","previous_headings":"","what":"Get credentials for a Snowflake connection — snowflake_credentials","title":"Get credentials for a Snowflake connection — snowflake_credentials","text":"Get credentials Snowflake connection","code":""},{"path":"https://posit-dev.github.io/snowflakeauth/reference/snowflake_credentials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get credentials for a Snowflake connection — snowflake_credentials","text":"","code":"snowflake_credentials(params, role = NULL, spcs_endpoint = NULL, ...)"},{"path":"https://posit-dev.github.io/snowflakeauth/reference/snowflake_credentials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get credentials for a Snowflake connection — snowflake_credentials","text":"params list connection parameters `snowflake_connection()“ role snowflake entity spcs_endpoint Snowpark Container Services ingress URL, formatted (*-accountname.snowflakecomputing.app) ... Additional Snowflake connection parameters","code":""},{"path":"https://posit-dev.github.io/snowflakeauth/reference/snowflake_credentials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get credentials for a Snowflake connection — snowflake_credentials","text":"list HTTP headers.","code":""},{"path":"https://posit-dev.github.io/snowflakeauth/reference/snowflake_credentials.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get credentials for a Snowflake connection — snowflake_credentials","text":"","code":"if (FALSE) { # has_a_default_connection() # Obtain authentication headers for accessing Snowflake APIs snowflake_credentials(  snowflake_connection() ) } if (FALSE) { # has_a_default_connection() # If the application is in Snowpark Container Services, # a different collection of headers are returned: snowflake_credentials(  snowflake_connection(),  spcs_endpoint = \"https://example-accountname.snowflakecomputing.app\" ) }"},{"path":"https://posit-dev.github.io/snowflakeauth/reference/snowflakeauth-package.html","id":null,"dir":"Reference","previous_headings":"","what":"snowflakeauth: Authentication Helpers for 'Snowflake' — snowflakeauth-package","title":"snowflakeauth: Authentication Helpers for 'Snowflake' — snowflakeauth-package","text":"Authentication helpers 'Snowflake'. provides compatibility authentication approaches supported 'Snowflake Connector Python' https://pypi.org/project/snowflake-connector-python 'Snowflake CLI' https://pypi.org/project/snowflake-cli.","code":""},{"path":[]},{"path":"https://posit-dev.github.io/snowflakeauth/reference/snowflakeauth-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"snowflakeauth: Authentication Helpers for 'Snowflake' — snowflakeauth-package","text":"Maintainer: E. David Aja david@posit.co Authors: Aaron Jacobs aaron.jacobs@posit.co contributors: Posit Software, PBC [copyright holder, funder]","code":""},{"path":"https://posit-dev.github.io/snowflakeauth/news/index.html","id":"snowflakeauth-011","dir":"Changelog","previous_headings":"","what":"snowflakeauth 0.1.1","title":"snowflakeauth 0.1.1","text":"Initial release. snowflakeauth toolkit authenticating Snowflake. aims compatibility connections.toml config.toml files used Snowflake Connector Python Snowflake CLI.","code":""}]
